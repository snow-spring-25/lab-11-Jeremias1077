@page "/GamePage"
<a href="/">Return</a>
<br>
<a href="/Solutions">View Solutions</a>
<br>


@if (hasName == true)
{

    <head>
        <style>
            h1 {
                text-align: center;
            }

            p {
                text-align: center;
            }

            div {
                text-align: center;
            }

            input {
                text-align: center;
            }
        </style>
    </head>

    <body>

        <h1>Normal Maze</h1>
        <p style="color: blue;">You are currently in cell @myLocation
            <br>
            You Found: @myLocation.WhatsHere
        </p>
        <div>
            <form @onsubmit="MakeMove">
                <input @bind="userInput" placeholder="Enter direction" />
                <input type="submit" value="Move" />
            </form>
        </div>
    </body>

    <h2>Move History</h2>
    <ul style="color: rgb(129, 218, 137);">
        @foreach (var move in moveHistory)
        {
            <li>@move</li>
        }
    </ul>
}
else
{
    <form @onsubmit="HasEnteredName">
        <input @bind="playerName" placeholder="Enter Your Username" />
        <input type="submit" value="Confirm" />
    </form>
}


@code
{
    string playerName = null;
    bool hasName = false;
    private MazeCell myLocation = MazeGame.Instance.StartingLocation;
    private string? userInput;
    private string moveMessage = "";
    private List<string> moveHistory = new List<string>();

    void MakeMove()
    {
        (myLocation, moveMessage) = MazeGame.Instance.Movement(userInput, myLocation, playerName);
        moveHistory.Insert(0, moveMessage);
        userInput = null;

        if (moveHistory.Count > 10)
        {
            moveHistory.RemoveAt(moveHistory.Count - 1);
        }
        StateHasChanged();
    }

    void HasEnteredName()
    {
        MazeGame.Instance.Players.Add(playerName, new Player { Name = playerName, Location = myLocation });
        if (!string.IsNullOrWhiteSpace(playerName))
        {
            hasName = true;
            StateHasChanged();
        }
        else
        {
            hasName = false;
            StateHasChanged();
        }
    }
}